-
  const submit_search_id = "submit-search"
  const search_text_id = "search-text"
  const ignore_case_id = "ignore-case"
  const ignore_accents_id = "ignore-accents"
  const search_input_id = "search-input"
  // const search_result_output_id = "search-result-output"


div(id=search_input_id)
  label(for=search_text_id) Enter search text:
  input(id=search_text_id, type="text", name=search_text_id)
  input(id=ignore_case_id, type="checkbox", checked)
  label(for=ignore_case_id) Ignore case
  input(id=ignore_accents_id, type="checkbox" checked)
  label(for=ignore_accents_id) Ignore accents
  button(id=submit_search_id, onClick="search()") Search
// div(id=search_result_output_id)


-
  const search_result_container_map = {id: "search-result-container", heading: "heading", entries: "entries"}
  const search_result_container_id = search_result_container_map.id 
  const search_result_container_heading = search_result_container_map.heading 
  const search_result_container_entries = search_result_container_map.entries 
  const search_result_name = "search-result"
  const search_entries_name = "search-entries"
  const search_result_entry_map = {id: "search-result-entry", title: 'entry-title', date: 'entry-date', content: 'entry-content'}
  const search_result_entry_id = search_result_entry_map.id;

template(id=search_result_container_map.id)
  div(id=search_result_container_map.id)
    h2(class=search_result_container_map.heading)
      slot(name=search_result_container_map.heading) (Search result)
    ul(class=search_result_container_map.entries)
      slot(name=search_result_container_map.entries)

template(id=search_result_entry_map.id)
  li(class=search_result_entry_map.id)
    a(class=search_result_entry_map.title)
    time(class=search_result_entry_map.date)
    p(class=search_result_entry_map.content, data-length=200)
    img.thumbnail

script(type="module").
  customElements.define(
  "#{search_result_container_map.id}",
  class extends HTMLElement {
    constructor() {
      super();
      const template = document.getElementById("#{search_result_container_map.id}");
      console.assert(template instanceof HTMLElement, `no template!`);
      const templateContent = template.content;
      console.assert(`no template content`);
      const _shadowRoot = this.attachShadow({mode: 'open'});
      console.assert(_shadowRoot, `attach shadow failed!`);
      const cloned = templateContent.cloneNode(true);
      console.assert(cloned, `clone node failed!`);
      const child = _shadowRoot.appendChild(cloned);
      console.assert(child, `append cloned:${cloned} failed!`)
      console.debug(`shadow root(${_shadowRoot}) appended a cloned child(${cloned}).`);
    }
  }
  );


#{search_result_container_map.id}(id=search_result_container_map.id, style="color: red;")
  span(slot=search_result_container_map.heading, class=search_result_container_map.heading) Slotted search result:
  li(slot=search_result_container_map.entries, class=search_result_container_map.entries) entry 1

script(type="module").
  import {exec_search, fetchData} from "/js/analyze-data.js";

  function search() {
  const input = document.getElementById("#{search_text_id}");
  if (!input)
    throw Error(`No ${search_text_id}`);
  if (input.value) {
    console.log(`Input text is set as: "${input.value}"`);
    const ignore_case_element = document.getElementById("#{ignore_case_id}");
    if (!ignore_case_element)
      throw Error(`No ${ignore_case_id} !`);
    const ignore_case = ignore_case_element.checked ? true : false;
    console.log(`Ignore case is set as: ${ignore_case}`);
    const ignore_accents_element = document.getElementById("#{ignore_accents_id}");
    if (!ignore_accents_element)
      throw Error(`No ${ignore_accents_id} !`);
    const ignore_accents = ignore_accents_element.checked ? true : false;
    console.log(`Ignore accents is set as: ${ignore_accents}`);
  exec_search(fetchData(), input.value, {ignore_case, ignore_accents}, 
   {id: "#{search_result_container_map.id}",
    heading: "#{search_result_container_map.heading}",
    entries: "#{search_result_container_map.entries}"},
    {id: "#{search_result_entry_map.id}",
     title: "#{search_result_entry_map.title}",
     date: "#{search_result_entry_map.date}",
     content: "#{search_result_entry_map.content}"});
  }
  else
    console.log(`No input text.`);
  }

  const submit_button = document.getElementById("#{submit_search_id}");

  if (!submit_button) {
    Error(`No submit_button`);
  }
  else {
    submit_button.onclick = search;
    console.log(`submit_button.onclick is set to function search()`)
  }
